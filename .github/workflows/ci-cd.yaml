name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t asd2321s2/express-api:latest .
          docker push asd2321s2/express-api:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Kustomize
        run: |
          wget -O kustomize https://github.com/kubernetes-sigs/kustomize/releases/latest/download/kustomize_linux_amd64
          chmod +x kustomize
          sudo mv kustomize /usr/local/bin/kustomize
          kustomize version


      - name: Update Kubernetes manifests with new image
        run: |
          cd manifests
          kustomize edit set image asd2321s2/express-api:latest
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions Bot"
          git add .
          git commit -m "Update image version to latest" || echo "No changes to commit"
          git push

      - name: Install ArgoCD CLI
        run: |
          wget -O argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/argocd
          argocd version --client

      # - name: Deploy to ArgoCD
      #   env:
      #     ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
      #     ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
      #     ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
      #   run: |
      #     argocd login $ARGOCD_SERVER --username=$ARGOCD_USERNAME --password=$ARGOCD_PASSWORD --insecure
      #     argocd app sync my-app
      #     argocd app wait my-app --health
