name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t asd2321s2/express-api:${{ github.sha }} .
          docker push asd2321s2/express-api:${{ github.sha }}

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # - name: Set up Minikube
      #   uses: medyagh/setup-minikube@v0.0.15
      #   with:
      #     driver: docker

      - name: Install Kustomize
        uses: syntaqx/setup-kustomize@v1
        with:
          kustomize-version: 5.0.1

      - name: Update Kubernetes manifests with new image
        run: |
          git pull --rebase origin main
          cd manifests
          kustomize edit set image asd2321s2/express-api:${{ github.sha }}

      - name: Commit and Push Changes
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions Bot"
          git add .
          git commit -m "Update image version to ${{ github.sha }}" || echo "No changes to commit"
          git push https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git HEAD:main

      - name: Setup ArgoCD CLI 
        uses: imajeetyadav/argocd-cli@v1
        with:
          version: v2.5.7

      - name: Login to ArgoCD
        run: |
          argocd login localhost:8080 --username admin --password ${{ ARGOCD_PASSWORD }} --insecure

      - name: Deploy using ArgoCD
        run: |
          argocd app sync express-api
          argocd app wait express-api --health

      # - name: Deploy to ArgoCD
      #   env:
      #     ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
      #     ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
      #     ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
      #   run: |
      #     argocd login $ARGOCD_SERVER --username=$ARGOCD_USERNAME --password=$ARGOCD_PASSWORD --insecure
      #     argocd app sync my-app
      #     argocd app wait my-app --health